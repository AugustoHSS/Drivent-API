version: "3"
services:
  drivent-postgres-production:
    image: postgres:13-alpine
    container_name: drivent-postgres-production
    environment:
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE}
      GH_CLIENT_ID: ${GH_CLIENT_ID}
      GH_CLIENT_SECRET: ${GH_CLIENT_SECRET}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - /usr/local/drivent-pg/data:/var/lib/postgresql/data
    command: postgres -p ${POSTGRES_PORT}
  drivent-redis-production:
    container_name: drivent-redis-production
    image: redis:6.2-alpine
    restart: always
    ports:
      - 6380:6379
    command: redis-server --save 20 1 --loglevel warning --requirepass 123456
    volumes:
      - drivent-redis-production-data:/data
  drivent-production:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: drivent-back
    depends_on:
      - drivent-postgres-production
      - drivent-redis-production
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    working_dir: /usr/src/drivent
    command: bash -c "npm run start"
    restart: always
    environment:
      NODE_ENV: production
      DATABASE_URL: ${DATABASE_URL}
      JWT_SECRET: ${JWT_SECRET}
      REDIS_PORT: 6379
      REDIS_PASSWORD: 123456
      REDIS_URL: redis://default:123456@drivent-redis-production:6379
  drivent-nginx:
    image: nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - /usr/src/drivent/front-end:/var/www/html
volumes:
  drivent-redis-production-data:
